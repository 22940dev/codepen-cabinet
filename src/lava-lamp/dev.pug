.scene
  - const height = 400
  - const width = 150
  - const inRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min
  mixin lava(amount)
    .lava-lamp__lava
      svg
        ellipse.blob.blob--top(cx='35', cy='0', rx='35', ry='10')
        ellipse.blob.blob--bottom(cx='75', cy='270', rx='75', ry='10')
        - for (let i = 0; i < amount; i++)
          - const speed = inRange(8, 50)
          - const delay = inRange(0, 10) - 10
          - const height = inRange(30, 100)
          - const width = inRange(30, 100)
          - const skewX = inRange(0, 10) - 5
          - const skewY = inRange(0, 10) - 5
          - const rotation = inRange(0, 360)
          - const x = inRange(0, 150)
          - const direction = Math.random() > 0.5 ? 'alternate' : 'alternate-reverse'
          circle.blob(r=(height / 2), cx=x, cy='400', style=`--skewX: ${skewX}; --skewY: ${skewY}; --height: ${height}; --speed: ${speed}; --delay: ${delay}; --direction: ${direction};`)
  .lava-lamp(style=`--height: ${height}; --width: ${width}`)
    .lava-lamp__main
      .lava-lamp__glass
        +lava(3)
        +lava(4)
        +lava(2)
        +lava(1)
    .lava-lamp__base

  svg(style='position: absolute; left: 100%')
    defs
      filter(id=`goo`)
        feGaussianBlur(in='SourceGraphic', stdDeviation='10', result='BLUR')
        feColorMatrix(in='BLUR', mode='matrix', values='1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7', result='GOO')
        feBlend(in='SourceGraphic', in2=`goo`)