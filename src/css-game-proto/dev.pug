- const shuffle = (arr) => {
-  let currentIndex = arr.length, temp, random
-  while (0 !== currentIndex) {
-    random = Math.floor(Math.random() * currentIndex)
-    currentIndex -= 1
-    temp = arr[currentIndex]
-    arr[currentIndex] = arr[random]
-    arr[random] = temp
-  }
-  return arr
- }
- const cards = 4
- const ord = shuffle([0, 1, 2, 3])
- const co = [[0, 0], [0, 1], [1, 0], [1, 1]]
mixin pick(no, limit)
  .p(class=`p-${no}`, style=`${no === 0 ? 'display: block' : ''}`)
    - for (let c = 0; c < cards; c++)
      - const chosenXY = co[ord[c]]
      input(class=`c-${c}`, type='radio', id=`c-${c}-${no}`, name=no, data=`${c % (cards / 2)}`, style=`--x: ${chosenXY[0]}; --y: ${chosenXY[1]};`)
      span(class=`c-${c}`, data=`${c % (cards / 2)}`, style=`--x: ${chosenXY[0]}; --y: ${chosenXY[1]};`)
    - if (no + 1 !== limit)
      +pick(no + 1, limit)
    - if (no + 1 === limit)
      .w ðŸŽ‰
.g
  +pick(0, cards)