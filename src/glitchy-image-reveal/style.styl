*
  box-sizing border-box

body
  background #111
  min-height 100vh
  display flex
  align-items center
  justify-content center

.glitch-image
  --cell-size calc(100 / var(--cells))
  height calc(var(--size, 300) * 1px)
  width calc(var(--size, 300) * 1px)
  display grid
  grid-template-columns repeat(var(--cells), 1fr)
  grid-template-rows repeat(var(--cells), 1fr)
  position relative
  overflow hidden

  & > img
    opacity 0
    height 0
    width 0

  &__cell
    position relative
    overflow hidden

    &:after
      content ''
      animation glitch-switch calc(var(--speed, 0.2) * 1s) calc(var(--delay, 0.5) * 1s) var(--count) backwards steps(1)
      background-image var(--src)
      background-size calc(var(--size) * 1px) calc(var(--size) * 1px)
      position absolute
      top 0
      left 0
      transform translate(calc((var(--x) * var(--cell-size)) * -1%), calc((var(--y) * var(--cell-size)) * -1%))
      height calc(var(--size) * 1px)
      width calc(var(--size) * 1px)


// Worth noting here if we write about this that FireFox requires
// the explicit background-position. Else, we could just update
// --x and --y on each keyframes
@keyframes glitch-switch
  0%
    filter grayscale(1)
    transform translate(calc((var(--x-0) * var(--cell-size)) * -1%), calc((var(--y-0) * var(--cell-size)) * -1%))
  10%
    transform translate(calc((var(--x-1) * var(--cell-size)) * -1%), calc((var(--y-1) * var(--cell-size)) * -1%))
  20%
    transform translate(calc((var(--x-2) * var(--cell-size)) * -1%), calc((var(--y-2) * var(--cell-size)) * -1%))
  30%
    transform translate(calc((var(--x-3) * var(--cell-size)) * -1%), calc((var(--y-3) * var(--cell-size)) * -1%))
  40%
    transform translate(calc((var(--x-4) * var(--cell-size)) * -1%), calc((var(--y-4) * var(--cell-size)) * -1%))
  50%
    transform translate(calc((var(--x-5) * var(--cell-size)) * -1%), calc((var(--y-5) * var(--cell-size)) * -1%))
  60%
    transform translate(calc((var(--x-6) * var(--cell-size)) * -1%), calc((var(--y-6) * var(--cell-size)) * -1%))
  70%
    transform translate(calc((var(--x-7) * var(--cell-size)) * -1%), calc((var(--y-7) * var(--cell-size)) * -1%))
  80%
    transform translate(calc((var(--x-8) * var(--cell-size)) * -1%), calc((var(--y-8) * var(--cell-size)) * -1%))
  90%
    transform translate(calc((var(--x-9) * var(--cell-size)) * -1%), calc((var(--y-9) * var(--cell-size)) * -1%))
  100%
    filter grayscale(0)
    transform translate(calc((var(--x-0) * var(--cell-size)) * -1%), calc((var(--y-0) * var(--cell-size)) * -1%))