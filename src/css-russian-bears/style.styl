*
  -webkit-tap-highlight-color transparent
  box-sizing border-box
  outline-color transparent

body
  align-items center
  background #fafafa
  display flex
  justify-content center
  min-height 100vh
  transform-style preserve-3d

:root
  --speed .25
  --scale-step 8
  --base-width 100
  --base-height calc(var(--base-width) * 1.83333333333)
  --slide-distance 60
  --pop-height 60
  --base-slide calc(var(--base-width) * 1)

  @media(min-width 768px)
    --base-width 300

.bears
  align-items flex-end
  border-bottom 4px solid #aaa
  display flex
  height calc(var(--base-height) * 1px)
  justify-content center
  margin 0
  width calc(var(--base-width) * 2px)

.bear
  --bear-color 'hsl(25, 80%, %s)' % (calc(var(--lightness) * 1%))
  --claw-color 'hsl(25, 80%, %s)' % (calc((var(--lightness) - 20) * 1%))
  --shirt-color 'hsl(%s, 50%, 50%)' % (var(--shirt-hue))
  --height calc((var(--base-height) * ((100 - (var(--bear-index) + 1) * var(--scale-step)) / 100)))
  --width calc((var(--base-width) * ((100 - (var(--bear-index) + 1) * var(--scale-step)) / 100)))
  --dummy-height calc((var(--base-height) * ((100 - (var(--bear-index) + 2) * var(--scale-step)) / 100)))
  --dummy-width calc((var(--base-width) * ((100 - (var(--bear-index) + 2) * var(--scale-step)) / 100)))
  height calc(var(--height) * 1px)
  display none
  position absolute
  transform-origin bottom center
  transition transform .25s ease
  width calc(var(--width) * 1px)
  z-index calc(var(--bear-count) - var(--bear-index))

  .bear-body
    fill var(--bear-color)

  .bear-shirt
    fill var(--shirt-color)

  .bear-claw
    fill var(--claw-color)

  .bear-foot
    stroke var(--claw-color)

  &--dummy
    bottom 0
    display block
    height 100%
    left 50%
    transform translate(-50%, 0) translate(0, 0)
    width 100%
    z-index auto

    &--half
      bottom 0
      height calc(var(--dummy-height) * .5px)
      left 50%
      overflow hidden
      position absolute
      transform translate(-50%, calc(var(--translation) * 1%))
      transform-origin bottom center
      width calc(var(--dummy-width) * 1px)
      z-index 2

    svg
      height 200%
      position absolute
      width 100%

    &--top
      --translation -100
      svg
        top 0

    &--bottom
      --translation 0
      svg
        bottom 0

  /**
   * Bear is actually used as a container
   * We use two half elements to mimic top and bottom
  */
  &__half
    height 50%
    left 50%
    overflow hidden
    position absolute
    right 0
    top 50%
    transform translate(-50%, calc(var(--translation) * 1%))
    width 100%

    svg
      height 200%
      position absolute
      width 100%

    &--top
      --translation -100

      svg
        top 0

    &--bottom
      --translation 0
      svg
        bottom 0

[type='checkbox']
[type='reset']
  display none

label
  cursor pointer

[for='reset']
  height 44px
  position absolute
  right 10px
  top 10px
  transition transform calc(var(--speed) * 1s) ease
  width 44px

  &:hover
    transform translate(0, -5%) scale(1.1)

    svg path
      fill #111

  svg
    height 44px
    width 44px

    path
      transition fill calc(var(--speed) * 1s) ease
      fill #aaaaaa
/**
 * A lot needs to happen when we check the box
 * 1. Disable clicking til animation finished
 * 2. Move the parent bear
 * 3. Reveal the baby bear
 * 4. Move the baby bear
 * 5. Show the real baby bear
 * 6. Show the new input
 * 7. Hide the dummy baby bear
 * 8. Fade out the parent bear
*/
input:checked
  /**
   * As soon as the input is checked, chain animations in forwards fill
   * for the container bear. This means scale up, slide left, open up
   * Reveal inner bear.
  */
  + .bear
    pointer-events none
    animation slideLeft calc(var(--speed) * 1s) forwards,
              slideOut calc(var(--speed) * 1s) calc(var(--speed) * 5s) forwards

    .bear__half--top
      transform-origin bottom left
      animation open calc(var(--speed) * 2s) calc(var(--speed) * 1s) forwards

    // Once the top has opened, move the dummy up and out and into the spot where it should be
    .bear--dummy
      animation popOut calc(var(--speed) * 1s) calc(var(--speed) * 2s) forwards,
                slideRight calc(var(--speed) * 1s) calc(var(--speed) * 3s) forwards,
                popDown calc(var(--speed) * 1s) calc(var(--speed) * 4s) forwards,
                disappear 0s calc(var(--speed) * 5s) forwards

    // Catches the last bear instance where there isn't an input
    + .bear
      display block
      animation appear 0s calc(var(--speed) * 5s) both

    + input
      &:checked + .bear
        animation slideLeft calc(var(--speed) * 1s) forwards,
                  slideOut calc(var(--speed) * 1s) calc(var(--speed) * 6s) forwards
      & + .bear
        display block
        animation appear 0s calc(var(--speed) * 5s) both

@keyframes disappear
  to
    transform scale(0)

@keyframes appear
  from
    transform scale(0)

@keyframes slideLeft
  to
    transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -1%), 0)

@keyframes slideOut
  from
    transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -1%), 0)
  to
    opacity 0
    transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -2%), 0)

@keyframes open
  0%
    transform translate(-50%, calc(var(--translation) * 1%)) translate(0, 0)
  {100 / 3%}
    transform translate(-50%, calc(var(--translation) * 1%)) translate(0, -100%)
  {100/ 3 * 2%}
    transform translate(-50%, calc(var(--translation) * 1%)) translate(-100%, -100%)
  100%
    transform translate(-50%, calc(var(--translation) * 1%)) translate(-100%, 100%)

@keyframes popOut
  to
    transform translate(-50%, calc(var(--pop-height) * -1%)) translate(0, 0)

@keyframes slideRight
  from
    transform translate(-50%, calc(var(--pop-height) * -1%)) translate(0, 0)
  to
    transform translate(-50%, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), 0)

@keyframes popDown
  from
    transform translate(-50%, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), 0)
  to
    transform translate(-50%, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), calc(var(--pop-height) * 1%))