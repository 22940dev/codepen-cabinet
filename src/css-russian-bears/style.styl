*
  -webkit-tap-highlight-color transparent
  box-sizing border-box
  outline-color transparent

body
  align-items center
  background #fafafa
  display flex
  justify-content center
  min-height 100vh

:root
  --speed 0.25
  --scale-step 0.05
  --base-width 100
  --base-height calc(var(--base-width) * 1.83333333333)
  --pop-height 60
  --slide-distance 60
  --base-slide calc(var(--base-width) * 1)

  @media(min-width 768px)
    --base-width 300

.bears
  height calc(var(--base-height) * 1px)
  margin 0
  position relative
  width calc(var(--base-width) * 1px)

  &:after
    background hsl(0, 0%, 75%)
    content ""
    height 4px
    left 50%
    position absolute
    top 100%
    transform translate(-50%, 0)
    width 200%

.bear
  --bear-color 'hsl(25, 80%, %s)' % (calc(var(--lightness) * 1%))
  --claw-color 'hsl(25, 80%, %s)' % (calc((var(--lightness) - 20) * 1%))
  --shirt-color 'hsl(%s, 50%, 50%)' % (var(--shirt-hue))
  height 100%
  position absolute
  width 100%

  /*
  * Purely for styling the SVG elements
  */
  .bear-body
    fill var(--bear-color)

  .bear-shirt
    fill var(--shirt-color)

  .bear-claw
    fill var(--claw-color)

  .bear-foot
    stroke var(--claw-color)

  &__half
    position absolute
    height 50%
    left 0
    overflow hidden
    width 100%

    // Little trick here is absolute positioned SVG
    // With overflow hidden on the halves
    svg
      height 200%
      position absolute
      width 100%

    &--top
      top 0

      svg
        top 0
    &--bottom
      bottom 0

      svg
        bottom 0

  &__container
  &__dummy-container
    height 100%
    left 0
    position absolute
    top 0
    width 100%

  &__container
    transform scale(calc(1 - ((var(--bear-index)) * var(--scale-step))))
    transform-origin bottom

  &__dummy
    --bear-color 'hsl(25, 80%, %s)' % (calc(var(--lightness) * 1%))
    --claw-color 'hsl(25, 80%, %s)' % (calc((var(--lightness) - 20) * 1%))
    --shirt-color 'hsl(%s, 50%, 50%)' % (var(--shirt-hue))
    height 100%
    left 0
    position absolute
    top 0
    transform scale(calc(1 - ((var(--bear-index) + 1) * var(--scale-step))))
    transform-origin bottom center
    width 100%

[type='checkbox']
[type='reset']
  display none

label
  cursor pointer
  display none

[for='reset']
  display block
  height 44px
  position fixed
  right 1rem
  top 1rem
  transition transform calc(var(--speed) * 1s) ease
  width 44px

  &:hover
    transform translate(0, -5%) scale(1.1)

    svg path
      fill #111

  svg
    height 44px
    width 44px

    path
      transition fill calc(var(--speed) * 1s) ease
      fill #aaaaaa
/**
 * A lot needs to happen when we check the box
 * 1. Disable clicking til animation finished
 * 2. Move the parent bear
 * 3. Reveal the baby bear
 * 4. Move the baby bear
 * 5. Show the real baby bear
 * 6. Show the new input
 * 7. Hide the dummy baby bear
 * 8. Fade out the parent bear
*/
input:checked + .bear + input + .bear
input:checked + .bear + .bear
  display block
  animation appear 0s calc(var(--speed) * 5s) both

input:checked + .bear
input:checked + .bear + input:checked + .bear
  animation slideLeft calc(var(--speed) * 1s) forwards, slideOut calc(var(--speed) * 1s) calc(var(--speed) * 6s) forwards
  pointer-events none

  .bear__half--top
    animation open calc(var(--speed) * 2s) calc(var(--speed) * 1s) forwards

  .bear__dummy-container
    animation move calc(var(--speed) * 2s) calc(var(--speed) * 3s) forwards, appear 0s calc(var(--speed) * 5s) reverse forwards

@keyframes slideLeft
  to
    transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -1%), 0)

@keyframes open
  0%
    transform translate(0, 0)
  {100 / 3%}
    transform translate(0, -100%)
  {100/ 3 * 2%}
    transform translate(-100%, -100%)
  100%
    transform translate(-100%, 100%)

@keyframes move
  0%
    transform translate(0, 0) translate(0,0)
  {100 / 3%}
    transform translate(0, calc(var(--pop-height) * -1%)) translate(0, 0)
  {100/ 3 * 2%}
    transform translate(0, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), 0)
  100%
    transform translate(0, calc(var(--pop-height) * -1%)) translate(calc((var(--base-slide) * 1px) + var(--slide-distance) * 1%), calc(var(--pop-height) * 1%))


@keyframes slideOut
  from
    transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -1%), 0)
  to
    opacity 0
    transform translate(calc((var(--base-slide) * -1px) + var(--slide-distance) * -2%), 0)

@keyframes appear
  from
    transform scale(0)
