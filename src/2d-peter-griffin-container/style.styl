*
  box-sizing border-box
  transform-style preserve-3d

$size = 300

:root
  --height $size * 1px
  --width calc(0.6 * var(--height))
  --glass hsla(210, 90%, 90%, 0.5)
  --shimmer hsla(210, 90%, 100%, 0.95)
  --w-1 hsl(86, 18%, 32%)
  --w-2 hsl(83, 12%, 21%)
  --f-1 hsl(35, 44%, 10%)
  --f-2 hsl(35, 44%, 15%)
  --f-3 hsl(35, 44%, 25%)
  --f-4 hsl(35, 44%, 30%)
  --i-1 hsl(27, 22%, 28%)
  --b-1 hsl(83, 15%, 70%)
  --b-4 hsl(83, 15%, 74%)
  --b-2 hsl(83, 15%, 40%)
  --b-3 hsl(83, 15%, 20%)


body
  min-height 100vh
  display grid
  place-items center
  justify-content center
  overflow hidden
  background hsla(45, 100%, 80%, 0.5)


.cuboid
  width 100%
  height 100%
  position relative
  pointer-events none
  // 1 is the top and go t, r, b, l, f, b

  &__side
    pointer-events none

  &__side:nth-of-type(1)
    height calc(var(--thickness) * 1px)
    width 100%
    position absolute
    top 0
    transform translate(0, -50%) rotateX(90deg)

  &__side:nth-of-type(2)
    height 100%
    width calc(var(--thickness) * 1px)
    position absolute
    top 50%
    right 0
    transform translate(50%, -50%) rotateY(90deg)

  &__side:nth-of-type(3)
    width 100%
    height calc(var(--thickness) * 1px)
    position absolute
    bottom 0
    transform translate(0%, 50%) rotateX(90deg)

  &__side:nth-of-type(4)
    height 100%
    width calc(var(--thickness) * 1px)
    position absolute
    left 0
    top 50%
    transform translate(-50%, -50%) rotateY(90deg)

  &__side:nth-of-type(5)
    height 100%
    width 100%
    transform translate3d(0, 0, calc(var(--thickness) * 0.5px))
    position absolute
    top 0
    left 0

  &__side:nth-of-type(6)
    height 100%
    width 100%
    transform translate3d(0, 0, calc(var(--thickness) * -0.5px)) rotateY(180deg)
    position absolute
    top 0
    left 0


.scene
  transform rotateX(-24deg) rotateY(24deg)
  // transform rotateX(0) rotateY(0)

.window
  height var(--height)
  width var(--width)
  position relative

.glass
  height calc(var(--height) * 0.25)
  width 25%
  position absolute
  top 0
  right 0
  background linear-gradient(var(--i-1), var(--i-1)) 0 0 / 100% 5% no-repeat,
            linear-gradient(var(--i-1), var(--i-1)) 0 0 / 5% 100% no-repeat,
            linear-gradient(var(--i-1), var(--i-1)) 100% 0 / 5% 100% no-repeat,
            linear-gradient(var(--i-1), var(--i-1)) 0 100% / 100% 5% no-repeat,
            linear-gradient(var(--i-1), var(--i-1)) 0 64% / 100% 8% no-repeat,
            linear-gradient(130deg, transparent 0 15%, var(--shimmer) 16% 35%, transparent 36% 40%, var(--shimmer) 41% 44%, transparent 45%),
            var(--glass)

.frame
  position absolute

  &--top
    width 130%
    height 5%
    bottom 100%
    left 50%
    transform translate(-50%, 0)

  &--sill
    width 120%
    height 5%
    top 100%
    left 50%
    background var(--f-4)
    transform translate3d(-50%, 0, 12px)

  &--left
    width 10%
    height 100%
    right 100%
    top 0

  &--right
    width 10%
    height 100%
    left 100%
    top 0

.peter
  position absolute
  top calc(var(--height) * 0.25)
  height 35px
  right 0%
  transform translate(-10%, calc((-80 * var(--peter, 0)) * 1%))

.peter__container
  height calc(var(--height) * 0.25)
  width 25%
  position absolute
  top 0
  right 0
  overflow hidden

.wall
  position absolute
  height 200vmax
  width 200vmax
  background linear-gradient(var(--w-1) 52%, var(--f-1) 52% 53%, var(--w-2) 53% 100%), var(--w-1)

  &--top
    bottom calc(50% + (var(--height) * 0.5))
    left 50%
    transform translate3d(-50%, 0, 10px)
    background var(--w-1)

  &--bottom
    top calc(50% + (var(--height) * 0.5))
    left 50%
    transform translate3d(-50%, 0, 10px)
    background var(--w-2)

  &--left
    right calc(50% + (var(--width) * 0.5))
    top 50%
    transform translate3d(0, -50%, 10px)

  &--right
    left calc(50% + (var(--width) * 0.5))
    top 50%
    transform translate3d(0, -50%, 10px)

.blinds
  width 25%
  height calc(var(--height) * 0.25)
  position absolute
  top 0
  right 0

.container
  min-height 25%
  height 25%
  width 100%
  max-height 130px
  contain layout size
  --css-contain layout size
  transform translate3d(0, 0, 12px) scale(4)
  position relative
  overflow hidden
  resize vertical
  transform-origin 100% 0
  clip-path inset(0 0 0 50%)
  -webkit-clip-path inset(0 0 0 50%)

  &:hover:after
    opacity 0.35

  &:active:after
    opacity 0

  &:after
    content ''
    position absolute
    bottom 0
    right 0
    height 16px
    width 16px
    background hsl(200, 80%, 50%)
    opacity 0
    transition opacity 0.2s

.blind
  width 100%
  height 2.5%
  background linear-gradient(var(--b-3) 0 10%, var(--b-1) 10% 90%, var(--b-3) 90% 100%)
  transform translate(0, calc(((-95 * (var(--index, 0))) * var(--open, 0)) * 1%))

.cord
  position absolute
  top 0
  right 4px
  width calc(var(--width) * 0.005)
  transform translate(50%, 0)
  background hsl(0, 0%, 98%)
  height 100%


  &--dummy
    background hsl(0, 0%, 86%)
    right 3px
    height calc(var(--height) * 0.21)

  &__handle
    position absolute
    bottom 0
    left 50%
    transform-origin 50% 100%
    transform translate(-54%, 0%) scale(0.65)
    height 10px
    width 6px
    clip-path polygon(0 100%, 100% 100%, 80% 0, 20% 0)
    -webkit-clip-path polygon(0 100%, 100% 100%, 80% 0, 20% 0)
    pointer-events none
    background var(--b-3)

    &:after
      clip-path polygon(0 100%, 100% 100%, 80% 0, 20% 0)
      -webkit-clip-path polygon(0 100%, 100% 100%, 80% 0, 20% 0)
      content ''
      position absolute
      top 0
      left 0
      height 100%
      width 100%
      background var(--b-2)
      transform scale(0.75)

::-webkit-resizer
  display block
  appearance none
  box-sizing border-box
  height 44px !important
  width 44px !important


$steps = 10
$cStart = 75
$cEnd = 130
$cSize = $cEnd - $cStart
$pStart = 100
$pEnd = 130
$pSize = $pEnd - $pStart
for $p in 0..$steps
  $step = $cStart + ($cSize / $steps * $p)
  $pStep = $pStart + ($pSize / $steps * $p)
  $open = $p / $steps
  $peter = $p / $steps

  @container (min-height: {$step}px)
    .blinds
      --open $open

  @media --css-container and (min-height: $step * 1px)
    .blinds
      --open $open

  @container (min-height: {$pStep}px)
    .peter
      --peter $peter

  @media --css-container and (min-height: $pStep * 1px)
    .peter
      --peter $peter

.window-frame
  div
    background var(--f-1)

    &:nth-of-type(1)
      background var(--f-1)
    &:nth-of-type(2)
      background var(--f-2)
    &:nth-of-type(3)
      background var(--f-3)
    &:nth-of-type(4)
      background var(--f-2)
    &:nth-of-type(5)
      background var(--f-3)
    &:nth-of-type(6)
      background var(--f-1)

  &--top
    --thickness 50

  &--right
    --thickness 40

  &--left
    --thickness 40

  &--bottom
    --thickness 40

  &--sill
    --thickness 60