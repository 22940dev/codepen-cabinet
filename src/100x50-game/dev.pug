- const asteroidCount = 50
- const randomInRange = (max, min) => Math.floor(Math.random() * (max - min)) + min
- let durations = []
- let colors = ['blue', 'orange', 'green', 'yellow']
//- - const asteroids = new Array(asteroidCount).fill().map(a => ({}))
form.game__container
  //- The start checkbox will show/hide the intro screen
  //- Clicking it reveal the moving blocks
  input.game__start(type='checkbox')
  //- The winning checkbox has to be in the top of the form
  //- In order to use sibling tricks 👍
  //- input.game__winner(type='checkbox')
  .game
    .board
      input(type='reset', value='Restart')
      - let a = 0
      while a < asteroidCount
        //- Define asteroid characteristics here
        - const speed = randomInRange(3, 8)
        - const delay = randomInRange(1, asteroidCount / 4)
        - const top = randomInRange(0, 40)
        - const color = colors[Math.floor(Math.random() * colors.length)]
        - const rotation = randomInRange(0, 360)
        - const radius = randomInRange(0, 100)
        - const size = randomInRange(4, 15)
        - durations.push(delay + speed)
        .asteroid(style=`--speed: ${speed}; --delay: ${delay}; --top: ${top}; --size: ${size}`)
          .asteroid__shape(style=`--color: ${color}; --rotation: ${rotation}; --radius: ${radius}`)
        //- Bump the count
        - a++
      .win(style=`--delay: ${Math.max(...durations) - 2};`) 🏆
  //- If we hover out of bounds, there needs to be a reset
  //- Otherwise it's going to be pretty easy to win 😅
  .game__over Out of bounds! 👎 <br/> Hover to restart.